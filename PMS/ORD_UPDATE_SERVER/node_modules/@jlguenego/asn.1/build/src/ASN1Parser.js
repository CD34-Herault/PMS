"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ASN1Parser = void 0;
const debug_1 = __importDefault(require("debug"));
const BERDecoder_1 = require("./codec/ber/decoder/BERDecoder");
const EncodingRule_1 = require("./EncodingRule");
const debug = debug_1.default('asn.1:parser');
class ASN1Parser {
    constructor(opts = {}) {
        this.options = {
            encodingRule: EncodingRule_1.EncodingRule.DER,
        };
        this.options = { ...this.options, ...opts };
    }
    parse(input) {
        debug('parse start');
        if ([EncodingRule_1.EncodingRule.BER, EncodingRule_1.EncodingRule.CER, EncodingRule_1.EncodingRule.DER].includes(this.options.encodingRule)) {
            return BERDecoder_1.BERDecode(input);
        }
        throw new Error('Encoding rule not yet implemented: ' + this.options.encodingRule);
    }
}
exports.ASN1Parser = ASN1Parser;
//# sourceMappingURL=ASN1Parser.js.map